apiVersion: v1
kind: ServiceAccount
metadata:
  name: taf-tafadmin
  namespace: taf

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: taf-tafadmin
  namespace: taf
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["daemonsets","deployments","deployments/scale","deployments/rollback","statefulsets","statefulsets/scale","statefulsets/rollback"]
    verbs: ["*"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: taf-tafadmin
  namespace: taf
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: taf-tafadmin
subjects:
  - kind: ServiceAccount
    name: taf-tafadmin
    namespace: taf
---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: taf-tafadmin
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch","update"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: taf-tafadmin
subjects:
- kind: ServiceAccount
  name: taf-tafadmin
  namespace: taf
roleRef:
  kind: ClusterRole
  name: taf-tafadmin
  apiGroup: rbac.authorization.k8s.io
---

kind: Service
apiVersion: v1
metadata:
  labels:
    TafServerApp: taf
    TafServerName: tafadmin
  name: taf-tafadmin
  namespace: taf
spec:
  clusterIP: None
  ports:
    - name: http
      port: 80
      protocol: TCP
  selector:
    app: taf-tafadmin
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: taf-tafadmin
  name: taf-tafadmin
  namespace: taf
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: taf-tafadmin
  serviceName: taf-tafadmin
  template:
    metadata:
      labels:
        app: taf-tafadmin
      name: taf-tafadmin
    spec:
      serviceAccountName: taf-tafadmin
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: taf.io/node
                operator: Exists
              - key: taf.io/ability.taf
                operator: Exists
      containers:
        - image: _DOCKER_REGISTRY_URL_/taf.tafadmin:10000
          imagePullPolicy: Always
          name: taf-tafadmin
          envFrom:
          - secretRef:
              name: taf-db
          volumeMounts:
            - mountPath: /host-log-path
              name: host-log-path
      dnsConfig:
        options:
          - name: ndots
            value: "2"
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      imagePullSecrets:
        - name: taf-image-secret
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /usr/local/app/taf/app_log
            type: DirectoryOrCreate
          name: host-log-path
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate