apiVersion: v1
kind: Service
metadata:
  annotations:
    tars.io/Servant: '{"statobj":{"Name":"StatObj","Port":10000,"HostPort":0,"Threads":3,"Connections":10000,"Capacity":10000,"Timeout":60000,"IsTaf":true,"IsTcp":true}}'  
  labels:
    tars.io/ServerApp: tars
    tars.io/ServerName: tarsstat
  name: tars-tarsstat
  namespace: tars
spec:
  clusterIP: None
  ports:
    - name: statobj
      port: 10000
      protocol: TCP
      targetPort: 10000
    - name: nodeobj
      port: 19385
      protocol: TCP
      targetPort: 19385
  selector:
    tars.io/ServerApp: tars
    tars.io/ServerName: tarsstat
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    tars.io/NodeSelector: '{"Kind":"AbilityPool","Value":[]}'
    tars.io/NotStacked: "false"
  labels:
    tars.io/ServerApp: tars
    tars.io/ServerName: tarsstat
  name: tars-tarsstat
  namespace: tars
spec:
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      tars.io/ServerApp: tars
      tars.io/ServerName: tarsstat
  serviceName: tars-tarsstat
  template:
    metadata:
      labels:
        tars.io/ServerApp: tars
        tars.io/ServerName: tarsstat
        tars.io/ServerVersion: "10000"
      name: tars-tarsstat
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: tars.io/node
                operator: Exists
              - key: tars.io/ability.tars
                operator: Exists
      containers:
        - env:
            - name: ServerApp
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['tars.io/ServerApp']
            - name: PodName
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image:  _DOCKER_REGISTRY_URL_/tars.tarsstat:10000
          imagePullPolicy: Always
          name: tars-tarsstat
          volumeMounts:
            - mountPath: /host-log-path
              name: host-log-path
      dnsConfig:
        options:
          - name: ndots
            value: "2"
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      imagePullSecrets:
        - name: tars-image-secret
      readinessGates:
      - conditionType: tars.io/service
      restartPolicy: Always
      schedulerName: default-scheduler
      volumes:
        - hostPath:
            path: /usr/local/app/tars/app_log
            type: DirectoryOrCreate
          name: host-log-path

