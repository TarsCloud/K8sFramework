
kind: Service
apiVersion: v1
metadata:
  labels:
    app: tars-tafimage
  name: tars-tafimage
  namespace: tars
spec:
  clusterIP: None
  ports:
    - name: http
      port: 80
      protocol: TCP
  selector:
    app: tars-tafimage
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: tars-tafimage
  name: tars-tafimage
  namespace: tars
spec:
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      app: tars-tafimage
  serviceName: tars-tafimage
  template:
    metadata:
      labels:
        app: tars-tafimage
      name: tars-tafimage
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: tars.io/node
                operator: Exists
              - key: tars.io/ability.tars
                operator: Exists
      containers:
        - image: _DOCKER_REGISTRY_URL_/tars.tafimage:10000
          imagePullPolicy: Always
          name: tars-tafimage
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-sock
            - mountPath: /etc/registry-env/
              name: registry-env
      dnsConfig:
        options:
          - name: ndots
            value: "2"
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      imagePullSecrets:
        - name: tars-image-secret
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /var/run/docker.sock
            type: File
          name: docker-sock
        - configMap:
            defaultMode: 420
            name: tars-image
          name: registry-env
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate