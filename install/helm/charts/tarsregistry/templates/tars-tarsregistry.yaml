apiVersion: v1
kind: ServiceAccount
metadata:
  name: tars-tarsregistry
---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tars-tarsregistry
rules:
  - apiGroups: [ "" ]
    resources: [ pods/status ]
    verbs: [ patch ]
  - apiGroups: [ k8s.tars.io ]
    resources: [ ttemplates,tendpoints ]
    verbs: [ get ,list, watch ]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tars-tarsregistry
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tars-tarsregistry
subjects:
  - kind: ServiceAccount
    name: tars-tarsregistry

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: tars-tarsregistry
data:
  upchain.conf: |
    <upchain>
        <default>
            #tcp -h 110.110.30.31 -p 8888 -t 60000
            #tcp -h 110.110.30.32 -p 8888 -t 60000
        </default>
        <tars.tarsalarm.AlarmObj>
            #tcp -h 110.110.30.34 -p 3327 -t 60000
            #tcp -h 110.110.30.35 -p 3325 -t 60000
        </tars.tarsalarm.AlarmObj>
    </upchain>
---

apiVersion: k8s.tars.io/v1alpha1
kind: TRelease
metadata:
  name: tars-tarsregistry
  namespace: {{.Release.Namespace}}
spec:
  list:
    - image: {{.Values.global.registry.url}}/tars.tarsregistry:10000
      imagePullSecret: tars-image-secret
      tag: "10000"
      serverType: tars_cpp
---

apiVersion: k8s.tars.io/v1alpha1
kind: TServer
metadata:
  name: tars-tarsregistry
spec:
  app: tars
  server: tarsregistry
  subType: tars
  tars:
    template: tars.cpp
    foreground: true
    servants:
      - name: RegistryObj
        port: 17890
        thread: 3
      - name: QueryObj
        port: 17891
        thread: 3
  k8s:
    replicas: 2
    nodeSelector:
      abilityPool:
        values: [ ]
    serviceAccount: tars-tarsregistry
    readinessGate: tars.io/active
    env:
      - name: Namespace
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: PodName
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: PodIP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: ServerApp
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels['tars.io/ServerApp']
    mounts:
      - name: host-log-dir
        source:
          hostPath:
            path: /usr/local/app/tars/app_log
            type: DirectoryOrCreate
        mountPath: /usr/local/app/tars/app_log
        subPathExpr: $(Namespace).$(PodName)
      - name: upchain
        source:
          configMap:
            name: tars-tarsregistry
        mountPath: /etc/upchain
  release:
    source: tars-tarsregistry
    tag: '10000'
    image: {{.Values.global.registry.url}}/tars.tarsregistry:10000
    imagePullSecret: tars-image-secret
    serverType: tars_cpp