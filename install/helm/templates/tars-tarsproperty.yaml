apiVersion: k8s.tars.io/v1alpha1
kind: TRelease
metadata:
  name: tars-tarsproperty
  labels:
    tars.io/ReleaseSource: tars-tarsproperty
    tars.io/ReleaseTag: "10000"
    tars.io/ServerApp: tars
    tars.io/ServerName: tarsproperty
    tars.io/SubType: tars
    tars.io/Template: tars.default
spec:
  list:
    - image: {{.Values.global.registry.url}}/tars.tarsproperty:10000
      imagePullSecret: tars-image-secret
      tag: "10000"
      serverType: tars_cpp
---

apiVersion: k8s.tars.io/v1alpha1
kind: TServer
metadata:
  name: tars-tarsproperty
spec:
  app: tars
  server: tarsproperty
  subType: tars
  tars:
    template: tars.cpp
    profile: |
      <tars>
      	sql=CREATE TABLE `${TABLE}` (`stattime` timestamp NOT NULL default CURRENT_TIMESTAMP,`f_date` date NOT NULL default '1970-01-01', `f_tflag` varchar(8) NOT NULL default '',`master_name` varchar(128) NOT NULL default '',`master_ip` varchar(16) default NULL,`property_name` varchar(100) default NULL,`set_name` varchar(15) NOT NULL default '',`set_area` varchar(15) NOT NULL default '',`set_id` varchar(15) NOT NULL default '',`policy` varchar(20) default NULL,`value` varchar(255) default NULL, KEY (`f_date`,`f_tflag`,`master_name`,`master_ip`,`property_name`,`policy`),KEY `IDX_MASTER_NAME` (`master_name`),KEY `IDX_MASTER_IP` (`master_ip`),KEY `IDX_TIME` (`stattime`)) ENGINE\=Innodb
      	<propertydb>
      	  <db1>
      	    tbname= tars_property_
            dbhost={{ .Values.propertyDB.host }}
            dbport={{ .Values.propertyDB.port }}
            dbname={{ .Values.propertyDB.name }}
            dbuser={{ .Values.propertyDB.user }}
            dbpass={{ .Values.propertyDB.password }}
            charset=utf8
      	  </db1>
      	</propertydb>
      	<hashmap>
      	  factor=1.5
      	  file=hashmap.txt
      	  insertInterval=5
      	  maxBlock=200
      	  minBlock=100
      	  size=64M
      	</hashmap>
      	<reapSql>
      	  Interval=10
      	  sql=insert ignore into t_master_property select  master_name, property_name, policy from ${TABLE}  group by  master_name, property_name, policy;
      	</reapSql>
      </tars>
    servants:
      - name: PropertyObj
        port: 10000
  k8s:
    replicas: 1
    nodeSelector:
      abilityPool:
        values: [ ]
    env:
      - name: Namespace
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: PodName
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: PodIP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: ServerApp
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels['tars.io/ServerApp']
    mounts:
      - name: host-log-dir
        source:
          hostPath:
            path: /usr/local/app/tars/app_log
            type: DirectoryOrCreate
        mountPath: /usr/local/app/tars/app_log
        subPathExpr: $(Namespace).$(PodName)
    readinessGate: tars.io/active
  release:
    source: tars-tarsproperty
    tag: '10000'
    image: {{.Values.global.registry.url}}/tars.tarsproperty:10000
    imagePullSecret:  tars-image-secret