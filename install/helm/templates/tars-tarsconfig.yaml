apiVersion: v1
kind: ServiceAccount
metadata:
  name: tars-tarsconfig
  namespace: {{.Release.Namespace}}
---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tars-tarsconfig
  namespace: {{.Release.Namespace}}
rules:
  - apiGroups: [ "" ]
    resources: [ pods ]
    verbs: [ get ,list, watch ]
  - apiGroups: [ k8s.tars.io ]
    resources: [ tconfigs ]
    verbs: [ get ,list, watch ]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tars-tarsconfig
  namespace: {{.Release.Namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tars-tarsconfig
subjects:
  - kind: ServiceAccount
    name: tars-tarsconfig
    namespace: {{.Release.Namespace}}
---

apiVersion: k8s.tars.io/v1alpha1
kind: TRelease
metadata:
  name: tars-tarsconfig
  namespace: {{.Release.Namespace}}
spec:
  list:
    - image: {{.Values.global.registry.url}}/tars.tarsconfig:10000
      imagePullSecret: tars-image-secret
      tag: "10000"
      serverType: tars_cpp
---

apiVersion: k8s.tars.io/v1alpha1
kind: TServer
metadata:
  name: tars-tarsconfig
  namespace: {{.Release.Namespace}}
  labels:
    tars.io/ReleaseSource: tars-tarsconfig
    tars.io/ReleaseTag: "10000"
    tars.io/ServerApp: tars
    tars.io/ServerName: tarsconfig
    tars.io/SubType: tars
    tars.io/Template: tars.default
spec:
  app: tars
  server: tarsconfig
  subType: tars
  tars:
    template: tars.cpp
    servants:
      - name: ConfigObj
        port: 10000
  k8s:
    replicas: 1
    nodeSelector:
      abilityPool:
        values: [ ]
    serviceAccount: tars-tarsconfig
    env:
      - name: Namespace
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: PodName
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: PodIP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: ServerApp
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels['tars.io/ServerApp']
    mounts:
      - name: host-log-dir
        source:
          hostPath:
            path: /usr/local/app/tars/app_log
            type: DirectoryOrCreate
        mountPath: /usr/local/app/tars/app_log
        subPathExpr: $(Namespace)/$(PodName)
    readinessGate: tars.io/active
  release:
    source: tars-tarsconfig
    tag: '10000'
    image: {{.Values.global.registry.url}}/tars.tarsconfig:10000
    imagePullSecret: tars-image-secret
    serverType: tars_cpp