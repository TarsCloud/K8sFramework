// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SelectRequestFilter select request filter
//
// swagger:model SelectRequestFilter
type SelectRequestFilter struct {

	// eq
	Eq MapInterface `json:"eq,omitempty"`

	// like
	Like MapString `json:"like,omitempty"`

	// ne
	Ne MapInterface `json:"ne,omitempty"`
}

// Validate validates this select request filter
func (m *SelectRequestFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEq(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLike(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNe(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SelectRequestFilter) validateEq(formats strfmt.Registry) error {

	if swag.IsZero(m.Eq) { // not required
		return nil
	}

	if err := m.Eq.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("eq")
		}
		return err
	}

	return nil
}

func (m *SelectRequestFilter) validateLike(formats strfmt.Registry) error {

	if swag.IsZero(m.Like) { // not required
		return nil
	}

	if err := m.Like.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("like")
		}
		return err
	}

	return nil
}

func (m *SelectRequestFilter) validateNe(formats strfmt.Registry) error {

	if swag.IsZero(m.Ne) { // not required
		return nil
	}

	if err := m.Ne.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("ne")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SelectRequestFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SelectRequestFilter) UnmarshalBinary(b []byte) error {
	var res SelectRequestFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
