// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SelectRequestLimiter select request limiter
//
// swagger:model SelectRequestLimiter
type SelectRequestLimiter struct {

	// offset
	// Minimum: 0
	Offset *int32 `json:"offset,omitempty"`

	// rows
	// Minimum: 1
	Rows int32 `json:"rows,omitempty"`
}

// Validate validates this select request limiter
func (m *SelectRequestLimiter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOffset(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRows(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SelectRequestLimiter) validateOffset(formats strfmt.Registry) error {

	if swag.IsZero(m.Offset) { // not required
		return nil
	}

	if err := validate.MinimumInt("offset", "body", int64(*m.Offset), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *SelectRequestLimiter) validateRows(formats strfmt.Registry) error {

	if swag.IsZero(m.Rows) { // not required
		return nil
	}

	if err := validate.MinimumInt("rows", "body", int64(m.Rows), 1, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SelectRequestLimiter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SelectRequestLimiter) UnmarshalBinary(b []byte) error {
	var res SelectRequestLimiter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
