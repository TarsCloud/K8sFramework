// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeleteAppHandlerFunc turns a function with the right signature into a delete app handler
type DeleteAppHandlerFunc func(DeleteAppParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteAppHandlerFunc) Handle(params DeleteAppParams) middleware.Responder {
	return fn(params)
}

// DeleteAppHandler interface for that can handle valid delete app params
type DeleteAppHandler interface {
	Handle(DeleteAppParams) middleware.Responder
}

// NewDeleteApp creates a new http.Handler for the delete app operation
func NewDeleteApp(ctx *middleware.Context, handler DeleteAppHandler) *DeleteApp {
	return &DeleteApp{Context: ctx, Handler: handler}
}

/*DeleteApp swagger:route DELETE /applications applications k8s deleteApp

删除应用列表，web=/application_delete

*/
type DeleteApp struct {
	Context *middleware.Context
	Handler DeleteAppHandler
}

func (o *DeleteApp) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteAppParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DeleteAppBody delete app body
//
// swagger:model DeleteAppBody
type DeleteAppBody struct {

	// metadata
	Metadata *DeleteAppParamsBodyMetadata `json:"metadata,omitempty"`
}

// Validate validates this delete app body
func (o *DeleteAppBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteAppBody) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Params" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteAppBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteAppBody) UnmarshalBinary(b []byte) error {
	var res DeleteAppBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteAppOKBody delete app o k body
//
// swagger:model DeleteAppOKBody
type DeleteAppOKBody struct {

	// result
	Result int32 `json:"result,omitempty"`
}

// Validate validates this delete app o k body
func (o *DeleteAppOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteAppOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteAppOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteAppOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteAppParamsBodyMetadata delete app params body metadata
//
// swagger:model DeleteAppParamsBodyMetadata
type DeleteAppParamsBodyMetadata struct {

	// app name
	// Required: true
	// Pattern: ^[a-zA-Z0-9]{1,24}\z
	AppName *string `json:"AppName"`
}

// Validate validates this delete app params body metadata
func (o *DeleteAppParamsBodyMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAppName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteAppParamsBodyMetadata) validateAppName(formats strfmt.Registry) error {

	if err := validate.Required("Params"+"."+"metadata"+"."+"AppName", "body", o.AppName); err != nil {
		return err
	}

	if err := validate.Pattern("Params"+"."+"metadata"+"."+"AppName", "body", string(*o.AppName), `^[a-zA-Z0-9]{1,24}\z`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteAppParamsBodyMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteAppParamsBodyMetadata) UnmarshalBinary(b []byte) error {
	var res DeleteAppParamsBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
