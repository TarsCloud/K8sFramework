// Code generated by go-swagger; DO NOT EDIT.

package node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DoListClusterNodeHandlerFunc turns a function with the right signature into a do list cluster node handler
type DoListClusterNodeHandlerFunc func(DoListClusterNodeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DoListClusterNodeHandlerFunc) Handle(params DoListClusterNodeParams) middleware.Responder {
	return fn(params)
}

// DoListClusterNodeHandler interface for that can handle valid do list cluster node params
type DoListClusterNodeHandler interface {
	Handle(DoListClusterNodeParams) middleware.Responder
}

// NewDoListClusterNode creates a new http.Handler for the do list cluster node operation
func NewDoListClusterNode(ctx *middleware.Context, handler DoListClusterNodeHandler) *DoListClusterNode {
	return &DoListClusterNode{Context: ctx, Handler: handler}
}

/*DoListClusterNode swagger:route GET /nodes/cluster node k8s doListClusterNode

拉取集群节点列表，web=/node_list

columns key=['NodeName']

*/
type DoListClusterNode struct {
	Context *middleware.Context
	Handler DoListClusterNodeHandler
}

func (o *DoListClusterNode) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDoListClusterNodeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DoListClusterNodeOKBody do list cluster node o k body
//
// swagger:model DoListClusterNodeOKBody
type DoListClusterNodeOKBody struct {

	// data
	Data []string `json:"Data"`
}

// Validate validates this do list cluster node o k body
func (o *DoListClusterNodeOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DoListClusterNodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DoListClusterNodeOKBody) UnmarshalBinary(b []byte) error {
	var res DoListClusterNodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
