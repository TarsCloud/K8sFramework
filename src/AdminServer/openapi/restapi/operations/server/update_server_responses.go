// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tafadmin/openapi/models"
)

// UpdateServerOKCode is the HTTP code returned for type UpdateServerOK
const UpdateServerOKCode int = 200

/*UpdateServerOK OK

swagger:response updateServerOK
*/
type UpdateServerOK struct {

	/*
	  In: Body
	*/
	Payload *UpdateServerOKBody `json:"body,omitempty"`
}

// NewUpdateServerOK creates UpdateServerOK with default headers values
func NewUpdateServerOK() *UpdateServerOK {

	return &UpdateServerOK{}
}

// WithPayload adds the payload to the update server o k response
func (o *UpdateServerOK) WithPayload(payload *UpdateServerOKBody) *UpdateServerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update server o k response
func (o *UpdateServerOK) SetPayload(payload *UpdateServerOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServerInternalServerErrorCode is the HTTP code returned for type UpdateServerInternalServerError
const UpdateServerInternalServerErrorCode int = 500

/*UpdateServerInternalServerError 内部错误

swagger:response updateServerInternalServerError
*/
type UpdateServerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServerInternalServerError creates UpdateServerInternalServerError with default headers values
func NewUpdateServerInternalServerError() *UpdateServerInternalServerError {

	return &UpdateServerInternalServerError{}
}

// WithPayload adds the payload to the update server internal server error response
func (o *UpdateServerInternalServerError) WithPayload(payload *models.Error) *UpdateServerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update server internal server error response
func (o *UpdateServerInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
