// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tarsadmin/openapi/models"
)

// SelectServerOKCode is the HTTP code returned for type SelectServerOK
const SelectServerOKCode int = 200

/*SelectServerOK OK

swagger:response selectServerOK
*/
type SelectServerOK struct {

	/*
	  In: Body
	*/
	Payload *models.SelectResult `json:"body,omitempty"`
}

// NewSelectServerOK creates SelectServerOK with default headers values
func NewSelectServerOK() *SelectServerOK {

	return &SelectServerOK{}
}

// WithPayload adds the payload to the select server o k response
func (o *SelectServerOK) WithPayload(payload *models.SelectResult) *SelectServerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select server o k response
func (o *SelectServerOK) SetPayload(payload *models.SelectResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SelectServerInternalServerErrorCode is the HTTP code returned for type SelectServerInternalServerError
const SelectServerInternalServerErrorCode int = 500

/*SelectServerInternalServerError 内部错误

swagger:response selectServerInternalServerError
*/
type SelectServerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSelectServerInternalServerError creates SelectServerInternalServerError with default headers values
func NewSelectServerInternalServerError() *SelectServerInternalServerError {

	return &SelectServerInternalServerError{}
}

// WithPayload adds the payload to the select server internal server error response
func (o *SelectServerInternalServerError) WithPayload(payload *models.Error) *SelectServerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select server internal server error response
func (o *SelectServerInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
