// Code generated by go-swagger; DO NOT EDIT.

package business

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DoListBusinessAppHandlerFunc turns a function with the right signature into a do list business app handler
type DoListBusinessAppHandlerFunc func(DoListBusinessAppParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DoListBusinessAppHandlerFunc) Handle(params DoListBusinessAppParams) middleware.Responder {
	return fn(params)
}

// DoListBusinessAppHandler interface for that can handle valid do list business app params
type DoListBusinessAppHandler interface {
	Handle(DoListBusinessAppParams) middleware.Responder
}

// NewDoListBusinessApp creates a new http.Handler for the do list business app operation
func NewDoListBusinessApp(ctx *middleware.Context, handler DoListBusinessAppHandler) *DoListBusinessApp {
	return &DoListBusinessApp{Context: ctx, Handler: handler}
}

/*DoListBusinessApp swagger:route GET /businesses/apps business k8s doListBusinessApp

拉取业务对应的App列表，web=/business_list_app

*/
type DoListBusinessApp struct {
	Context *middleware.Context
	Handler DoListBusinessAppHandler
}

func (o *DoListBusinessApp) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDoListBusinessAppParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
