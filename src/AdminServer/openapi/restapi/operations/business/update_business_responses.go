// Code generated by go-swagger; DO NOT EDIT.

package business

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tarsadmin/openapi/models"
)

// UpdateBusinessOKCode is the HTTP code returned for type UpdateBusinessOK
const UpdateBusinessOKCode int = 200

/*UpdateBusinessOK OK

swagger:response updateBusinessOK
*/
type UpdateBusinessOK struct {

	/*
	  In: Body
	*/
	Payload *UpdateBusinessOKBody `json:"body,omitempty"`
}

// NewUpdateBusinessOK creates UpdateBusinessOK with default headers values
func NewUpdateBusinessOK() *UpdateBusinessOK {

	return &UpdateBusinessOK{}
}

// WithPayload adds the payload to the update business o k response
func (o *UpdateBusinessOK) WithPayload(payload *UpdateBusinessOKBody) *UpdateBusinessOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update business o k response
func (o *UpdateBusinessOK) SetPayload(payload *UpdateBusinessOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBusinessOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateBusinessInternalServerErrorCode is the HTTP code returned for type UpdateBusinessInternalServerError
const UpdateBusinessInternalServerErrorCode int = 500

/*UpdateBusinessInternalServerError 内部错误

swagger:response updateBusinessInternalServerError
*/
type UpdateBusinessInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateBusinessInternalServerError creates UpdateBusinessInternalServerError with default headers values
func NewUpdateBusinessInternalServerError() *UpdateBusinessInternalServerError {

	return &UpdateBusinessInternalServerError{}
}

// WithPayload adds the payload to the update business internal server error response
func (o *UpdateBusinessInternalServerError) WithPayload(payload *models.Error) *UpdateBusinessInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update business internal server error response
func (o *UpdateBusinessInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBusinessInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
