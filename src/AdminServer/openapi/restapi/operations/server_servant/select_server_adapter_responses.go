// Code generated by go-swagger; DO NOT EDIT.

package server_servant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tafadmin/openapi/models"
)

// SelectServerAdapterOKCode is the HTTP code returned for type SelectServerAdapterOK
const SelectServerAdapterOKCode int = 200

/*SelectServerAdapterOK OK

swagger:response selectServerAdapterOK
*/
type SelectServerAdapterOK struct {

	/*
	  In: Body
	*/
	Payload *models.SelectResult `json:"body,omitempty"`
}

// NewSelectServerAdapterOK creates SelectServerAdapterOK with default headers values
func NewSelectServerAdapterOK() *SelectServerAdapterOK {

	return &SelectServerAdapterOK{}
}

// WithPayload adds the payload to the select server adapter o k response
func (o *SelectServerAdapterOK) WithPayload(payload *models.SelectResult) *SelectServerAdapterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select server adapter o k response
func (o *SelectServerAdapterOK) SetPayload(payload *models.SelectResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServerAdapterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SelectServerAdapterInternalServerErrorCode is the HTTP code returned for type SelectServerAdapterInternalServerError
const SelectServerAdapterInternalServerErrorCode int = 500

/*SelectServerAdapterInternalServerError 内部错误

swagger:response selectServerAdapterInternalServerError
*/
type SelectServerAdapterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSelectServerAdapterInternalServerError creates SelectServerAdapterInternalServerError with default headers values
func NewSelectServerAdapterInternalServerError() *SelectServerAdapterInternalServerError {

	return &SelectServerAdapterInternalServerError{}
}

// WithPayload adds the payload to the select server adapter internal server error response
func (o *SelectServerAdapterInternalServerError) WithPayload(payload *models.Error) *SelectServerAdapterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select server adapter internal server error response
func (o *SelectServerAdapterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServerAdapterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
