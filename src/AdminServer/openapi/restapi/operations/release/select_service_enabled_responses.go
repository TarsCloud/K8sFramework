// Code generated by go-swagger; DO NOT EDIT.

package release

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tarsadmin/openapi/models"
)

// SelectServiceEnabledOKCode is the HTTP code returned for type SelectServiceEnabledOK
const SelectServiceEnabledOKCode int = 200

/*SelectServiceEnabledOK OK

swagger:response selectServiceEnabledOK
*/
type SelectServiceEnabledOK struct {

	/*
	  In: Body
	*/
	Payload *models.SelectResult `json:"body,omitempty"`
}

// NewSelectServiceEnabledOK creates SelectServiceEnabledOK with default headers values
func NewSelectServiceEnabledOK() *SelectServiceEnabledOK {

	return &SelectServiceEnabledOK{}
}

// WithPayload adds the payload to the select service enabled o k response
func (o *SelectServiceEnabledOK) WithPayload(payload *models.SelectResult) *SelectServiceEnabledOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select service enabled o k response
func (o *SelectServiceEnabledOK) SetPayload(payload *models.SelectResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServiceEnabledOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SelectServiceEnabledInternalServerErrorCode is the HTTP code returned for type SelectServiceEnabledInternalServerError
const SelectServiceEnabledInternalServerErrorCode int = 500

/*SelectServiceEnabledInternalServerError 内部错误

swagger:response selectServiceEnabledInternalServerError
*/
type SelectServiceEnabledInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSelectServiceEnabledInternalServerError creates SelectServiceEnabledInternalServerError with default headers values
func NewSelectServiceEnabledInternalServerError() *SelectServiceEnabledInternalServerError {

	return &SelectServiceEnabledInternalServerError{}
}

// WithPayload adds the payload to the select service enabled internal server error response
func (o *SelectServiceEnabledInternalServerError) WithPayload(payload *models.Error) *SelectServiceEnabledInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select service enabled internal server error response
func (o *SelectServiceEnabledInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServiceEnabledInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
