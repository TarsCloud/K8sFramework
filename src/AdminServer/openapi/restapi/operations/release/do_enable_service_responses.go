// Code generated by go-swagger; DO NOT EDIT.

package release

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tarsadmin/openapi/models"
)

// DoEnableServiceOKCode is the HTTP code returned for type DoEnableServiceOK
const DoEnableServiceOKCode int = 200

/*DoEnableServiceOK OK

swagger:response doEnableServiceOK
*/
type DoEnableServiceOK struct {

	/*
	  In: Body
	*/
	Payload *DoEnableServiceOKBody `json:"body,omitempty"`
}

// NewDoEnableServiceOK creates DoEnableServiceOK with default headers values
func NewDoEnableServiceOK() *DoEnableServiceOK {

	return &DoEnableServiceOK{}
}

// WithPayload adds the payload to the do enable service o k response
func (o *DoEnableServiceOK) WithPayload(payload *DoEnableServiceOKBody) *DoEnableServiceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the do enable service o k response
func (o *DoEnableServiceOK) SetPayload(payload *DoEnableServiceOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DoEnableServiceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DoEnableServiceInternalServerErrorCode is the HTTP code returned for type DoEnableServiceInternalServerError
const DoEnableServiceInternalServerErrorCode int = 500

/*DoEnableServiceInternalServerError 内部错误

swagger:response doEnableServiceInternalServerError
*/
type DoEnableServiceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDoEnableServiceInternalServerError creates DoEnableServiceInternalServerError with default headers values
func NewDoEnableServiceInternalServerError() *DoEnableServiceInternalServerError {

	return &DoEnableServiceInternalServerError{}
}

// WithPayload adds the payload to the do enable service internal server error response
func (o *DoEnableServiceInternalServerError) WithPayload(payload *models.Error) *DoEnableServiceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the do enable service internal server error response
func (o *DoEnableServiceInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DoEnableServiceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
