// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tafadmin/openapi/models"
)

// UpdateServerConfigOKCode is the HTTP code returned for type UpdateServerConfigOK
const UpdateServerConfigOKCode int = 200

/*UpdateServerConfigOK OK

swagger:response updateServerConfigOK
*/
type UpdateServerConfigOK struct {

	/*
	  In: Body
	*/
	Payload *UpdateServerConfigOKBody `json:"body,omitempty"`
}

// NewUpdateServerConfigOK creates UpdateServerConfigOK with default headers values
func NewUpdateServerConfigOK() *UpdateServerConfigOK {

	return &UpdateServerConfigOK{}
}

// WithPayload adds the payload to the update server config o k response
func (o *UpdateServerConfigOK) WithPayload(payload *UpdateServerConfigOKBody) *UpdateServerConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update server config o k response
func (o *UpdateServerConfigOK) SetPayload(payload *UpdateServerConfigOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServerConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServerConfigInternalServerErrorCode is the HTTP code returned for type UpdateServerConfigInternalServerError
const UpdateServerConfigInternalServerErrorCode int = 500

/*UpdateServerConfigInternalServerError 内部错误

swagger:response updateServerConfigInternalServerError
*/
type UpdateServerConfigInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServerConfigInternalServerError creates UpdateServerConfigInternalServerError with default headers values
func NewUpdateServerConfigInternalServerError() *UpdateServerConfigInternalServerError {

	return &UpdateServerConfigInternalServerError{}
}

// WithPayload adds the payload to the update server config internal server error response
func (o *UpdateServerConfigInternalServerError) WithPayload(payload *models.Error) *UpdateServerConfigInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update server config internal server error response
func (o *UpdateServerConfigInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServerConfigInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
