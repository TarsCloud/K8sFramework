// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DoPreviewConfigContentHandlerFunc turns a function with the right signature into a do preview config content handler
type DoPreviewConfigContentHandlerFunc func(DoPreviewConfigContentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DoPreviewConfigContentHandlerFunc) Handle(params DoPreviewConfigContentParams) middleware.Responder {
	return fn(params)
}

// DoPreviewConfigContentHandler interface for that can handle valid do preview config content params
type DoPreviewConfigContentHandler interface {
	Handle(DoPreviewConfigContentParams) middleware.Responder
}

// NewDoPreviewConfigContent creates a new http.Handler for the do preview config content operation
func NewDoPreviewConfigContent(ctx *middleware.Context, handler DoPreviewConfigContentHandler) *DoPreviewConfigContent {
	return &DoPreviewConfigContent{Context: ctx, Handler: handler}
}

/*DoPreviewConfigContent swagger:route GET /configs/join config k8s doPreviewConfigContent

拉取配置，web=/merged_node_config

*/
type DoPreviewConfigContent struct {
	Context *middleware.Context
	Handler DoPreviewConfigContentHandler
}

func (o *DoPreviewConfigContent) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDoPreviewConfigContentParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DoPreviewConfigContentOKBody do preview config content o k body
//
// swagger:model DoPreviewConfigContentOKBody
type DoPreviewConfigContentOKBody struct {

	// result
	Result string `json:"result,omitempty"`
}

// Validate validates this do preview config content o k body
func (o *DoPreviewConfigContentOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DoPreviewConfigContentOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DoPreviewConfigContentOKBody) UnmarshalBinary(b []byte) error {
	var res DoPreviewConfigContentOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
