// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tafadmin/openapi/models"
)

// SelectServerConfigOKCode is the HTTP code returned for type SelectServerConfigOK
const SelectServerConfigOKCode int = 200

/*SelectServerConfigOK OK

swagger:response selectServerConfigOK
*/
type SelectServerConfigOK struct {

	/*
	  In: Body
	*/
	Payload *models.SelectResult `json:"body,omitempty"`
}

// NewSelectServerConfigOK creates SelectServerConfigOK with default headers values
func NewSelectServerConfigOK() *SelectServerConfigOK {

	return &SelectServerConfigOK{}
}

// WithPayload adds the payload to the select server config o k response
func (o *SelectServerConfigOK) WithPayload(payload *models.SelectResult) *SelectServerConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select server config o k response
func (o *SelectServerConfigOK) SetPayload(payload *models.SelectResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServerConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SelectServerConfigInternalServerErrorCode is the HTTP code returned for type SelectServerConfigInternalServerError
const SelectServerConfigInternalServerErrorCode int = 500

/*SelectServerConfigInternalServerError 内部错误

swagger:response selectServerConfigInternalServerError
*/
type SelectServerConfigInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSelectServerConfigInternalServerError creates SelectServerConfigInternalServerError with default headers values
func NewSelectServerConfigInternalServerError() *SelectServerConfigInternalServerError {

	return &SelectServerConfigInternalServerError{}
}

// WithPayload adds the payload to the select server config internal server error response
func (o *SelectServerConfigInternalServerError) WithPayload(payload *models.Error) *SelectServerConfigInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select server config internal server error response
func (o *SelectServerConfigInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServerConfigInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
