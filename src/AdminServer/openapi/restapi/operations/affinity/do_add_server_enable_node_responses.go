// Code generated by go-swagger; DO NOT EDIT.

package affinity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tafadmin/openapi/models"
)

// DoAddServerEnableNodeOKCode is the HTTP code returned for type DoAddServerEnableNodeOK
const DoAddServerEnableNodeOKCode int = 200

/*DoAddServerEnableNodeOK OK

swagger:response doAddServerEnableNodeOK
*/
type DoAddServerEnableNodeOK struct {

	/*
	  In: Body
	*/
	Payload *DoAddServerEnableNodeOKBody `json:"body,omitempty"`
}

// NewDoAddServerEnableNodeOK creates DoAddServerEnableNodeOK with default headers values
func NewDoAddServerEnableNodeOK() *DoAddServerEnableNodeOK {

	return &DoAddServerEnableNodeOK{}
}

// WithPayload adds the payload to the do add server enable node o k response
func (o *DoAddServerEnableNodeOK) WithPayload(payload *DoAddServerEnableNodeOKBody) *DoAddServerEnableNodeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the do add server enable node o k response
func (o *DoAddServerEnableNodeOK) SetPayload(payload *DoAddServerEnableNodeOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DoAddServerEnableNodeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DoAddServerEnableNodeInternalServerErrorCode is the HTTP code returned for type DoAddServerEnableNodeInternalServerError
const DoAddServerEnableNodeInternalServerErrorCode int = 500

/*DoAddServerEnableNodeInternalServerError 内部错误

swagger:response doAddServerEnableNodeInternalServerError
*/
type DoAddServerEnableNodeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDoAddServerEnableNodeInternalServerError creates DoAddServerEnableNodeInternalServerError with default headers values
func NewDoAddServerEnableNodeInternalServerError() *DoAddServerEnableNodeInternalServerError {

	return &DoAddServerEnableNodeInternalServerError{}
}

// WithPayload adds the payload to the do add server enable node internal server error response
func (o *DoAddServerEnableNodeInternalServerError) WithPayload(payload *models.Error) *DoAddServerEnableNodeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the do add server enable node internal server error response
func (o *DoAddServerEnableNodeInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DoAddServerEnableNodeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
