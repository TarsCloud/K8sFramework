// Code generated by go-swagger; DO NOT EDIT.

package deploy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tarsadmin/openapi/models"
)

// SelectDeployOKCode is the HTTP code returned for type SelectDeployOK
const SelectDeployOKCode int = 200

/*SelectDeployOK OK

swagger:response selectDeployOK
*/
type SelectDeployOK struct {

	/*
	  In: Body
	*/
	Payload *models.SelectResult `json:"body,omitempty"`
}

// NewSelectDeployOK creates SelectDeployOK with default headers values
func NewSelectDeployOK() *SelectDeployOK {

	return &SelectDeployOK{}
}

// WithPayload adds the payload to the select deploy o k response
func (o *SelectDeployOK) WithPayload(payload *models.SelectResult) *SelectDeployOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select deploy o k response
func (o *SelectDeployOK) SetPayload(payload *models.SelectResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectDeployOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SelectDeployInternalServerErrorCode is the HTTP code returned for type SelectDeployInternalServerError
const SelectDeployInternalServerErrorCode int = 500

/*SelectDeployInternalServerError 内部错误

swagger:response selectDeployInternalServerError
*/
type SelectDeployInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSelectDeployInternalServerError creates SelectDeployInternalServerError with default headers values
func NewSelectDeployInternalServerError() *SelectDeployInternalServerError {

	return &SelectDeployInternalServerError{}
}

// WithPayload adds the payload to the select deploy internal server error response
func (o *SelectDeployInternalServerError) WithPayload(payload *models.Error) *SelectDeployInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select deploy internal server error response
func (o *SelectDeployInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectDeployInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
