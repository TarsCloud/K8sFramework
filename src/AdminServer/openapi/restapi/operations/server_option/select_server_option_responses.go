// Code generated by go-swagger; DO NOT EDIT.

package server_option

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tarsadmin/openapi/models"
)

// SelectServerOptionOKCode is the HTTP code returned for type SelectServerOptionOK
const SelectServerOptionOKCode int = 200

/*SelectServerOptionOK OK

swagger:response selectServerOptionOK
*/
type SelectServerOptionOK struct {

	/*
	  In: Body
	*/
	Payload *models.SelectResult `json:"body,omitempty"`
}

// NewSelectServerOptionOK creates SelectServerOptionOK with default headers values
func NewSelectServerOptionOK() *SelectServerOptionOK {

	return &SelectServerOptionOK{}
}

// WithPayload adds the payload to the select server option o k response
func (o *SelectServerOptionOK) WithPayload(payload *models.SelectResult) *SelectServerOptionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select server option o k response
func (o *SelectServerOptionOK) SetPayload(payload *models.SelectResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServerOptionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SelectServerOptionInternalServerErrorCode is the HTTP code returned for type SelectServerOptionInternalServerError
const SelectServerOptionInternalServerErrorCode int = 500

/*SelectServerOptionInternalServerError 内部错误

swagger:response selectServerOptionInternalServerError
*/
type SelectServerOptionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSelectServerOptionInternalServerError creates SelectServerOptionInternalServerError with default headers values
func NewSelectServerOptionInternalServerError() *SelectServerOptionInternalServerError {

	return &SelectServerOptionInternalServerError{}
}

// WithPayload adds the payload to the select server option internal server error response
func (o *SelectServerOptionInternalServerError) WithPayload(payload *models.Error) *SelectServerOptionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select server option internal server error response
func (o *SelectServerOptionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectServerOptionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
