// Code generated by go-swagger; DO NOT EDIT.

package server_option

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tafadmin/openapi/models"
)

// UpdateServerOptionOKCode is the HTTP code returned for type UpdateServerOptionOK
const UpdateServerOptionOKCode int = 200

/*UpdateServerOptionOK OK

swagger:response updateServerOptionOK
*/
type UpdateServerOptionOK struct {

	/*
	  In: Body
	*/
	Payload *UpdateServerOptionOKBody `json:"body,omitempty"`
}

// NewUpdateServerOptionOK creates UpdateServerOptionOK with default headers values
func NewUpdateServerOptionOK() *UpdateServerOptionOK {

	return &UpdateServerOptionOK{}
}

// WithPayload adds the payload to the update server option o k response
func (o *UpdateServerOptionOK) WithPayload(payload *UpdateServerOptionOKBody) *UpdateServerOptionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update server option o k response
func (o *UpdateServerOptionOK) SetPayload(payload *UpdateServerOptionOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServerOptionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServerOptionInternalServerErrorCode is the HTTP code returned for type UpdateServerOptionInternalServerError
const UpdateServerOptionInternalServerErrorCode int = 500

/*UpdateServerOptionInternalServerError 内部错误

swagger:response updateServerOptionInternalServerError
*/
type UpdateServerOptionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServerOptionInternalServerError creates UpdateServerOptionInternalServerError with default headers values
func NewUpdateServerOptionInternalServerError() *UpdateServerOptionInternalServerError {

	return &UpdateServerOptionInternalServerError{}
}

// WithPayload adds the payload to the update server option internal server error response
func (o *UpdateServerOptionInternalServerError) WithPayload(payload *models.Error) *UpdateServerOptionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update server option internal server error response
func (o *UpdateServerOptionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServerOptionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
