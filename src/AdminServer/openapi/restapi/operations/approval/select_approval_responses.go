// Code generated by go-swagger; DO NOT EDIT.

package approval

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tafadmin/openapi/models"
)

// SelectApprovalOKCode is the HTTP code returned for type SelectApprovalOK
const SelectApprovalOKCode int = 200

/*SelectApprovalOK OK

swagger:response selectApprovalOK
*/
type SelectApprovalOK struct {

	/*
	  In: Body
	*/
	Payload *models.SelectResult `json:"body,omitempty"`
}

// NewSelectApprovalOK creates SelectApprovalOK with default headers values
func NewSelectApprovalOK() *SelectApprovalOK {

	return &SelectApprovalOK{}
}

// WithPayload adds the payload to the select approval o k response
func (o *SelectApprovalOK) WithPayload(payload *models.SelectResult) *SelectApprovalOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select approval o k response
func (o *SelectApprovalOK) SetPayload(payload *models.SelectResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectApprovalOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SelectApprovalInternalServerErrorCode is the HTTP code returned for type SelectApprovalInternalServerError
const SelectApprovalInternalServerErrorCode int = 500

/*SelectApprovalInternalServerError 内部错误

swagger:response selectApprovalInternalServerError
*/
type SelectApprovalInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSelectApprovalInternalServerError creates SelectApprovalInternalServerError with default headers values
func NewSelectApprovalInternalServerError() *SelectApprovalInternalServerError {

	return &SelectApprovalInternalServerError{}
}

// WithPayload adds the payload to the select approval internal server error response
func (o *SelectApprovalInternalServerError) WithPayload(payload *models.Error) *SelectApprovalInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the select approval internal server error response
func (o *SelectApprovalInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SelectApprovalInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
